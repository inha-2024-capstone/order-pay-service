plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()

	// 아임포트 관련
	maven {url 'https://jitpack.io'}
}

dependencies {
	// Default
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Util
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
 	// custom yoger
	implementation 'com.github.inha-2024-capstone:yoger-library:v0.3.0'

	// Payment
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'

	// Docs
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// Monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// TEST
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// test container
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
}

tasks.named('test') {
	useJUnitPlatform()
}

processResources {
	def activeProfile = System.getProperty("spring.profiles.active", "")

	if (activeProfile == "prod") {
		exclude("application*.yml")
		include("application-prod.yml")
	}
}

bootBuildImage {
	imageName = "yoger_order"
}